# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "README" branch
  push:
    branches: [ "README" ]
  pull_request:
    branches: [ "README" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          sudo apt-get install git ccache automake flex lzop bison \
          gperf build-essential zip curl zlib1g-dev \ 
          g++-multilib python3-networkx libxml2-utils bzip2 libbz2-dev \
          libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush \
          schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev \
          pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl \
          libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev \
          x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip
          git clone --depth=1 -b moonstone-s-oss https://github.com/MiCode/Xiaomi_Kernel_OpenSource.git kernel
          cd kernel
          git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9 toolchain
          mkdir out
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=${PWD}/toolchain/bin/aarch64-linux-android-
          make O=out gki_defconfig
          make -j$(nproc) O=out 2>&1 | tee kernel.log
