name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y git gcc-aarch64-linux-gnu clang ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev python3-networkx libxml2-utils bzip2 libbz2-dev libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip
          sudo apt install -y cpio

      - name: Clone kernel source 
        run: |
          git clone --depth=1 -b moonstone-s-oss https://github.com/MiCode/Xiaomi_Kernel_OpenSource.git kernel
          cd kernel
          sudo chmod -R 777 .

      - name: Build kernel
        run: |
          cd kernel
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          make gki_defconfig
          make -j$(nproc)

      - name: Create boot image
        run: |
          mkdir bootimage
          cd bootimage

          # Copy the compiled kernel image
          cp ../kernel/arch/arm64/boot/Image.gz .

          # Create a simple ramdisk
          mkdir ramdisk
          echo "init" > ramdisk/init
          cd ramdisk
          find . | cpio -H newc --create > ../ramdisk.cpio
          cd ..
          gzip ramdisk.cpio
          mv ramdisk.cpio.gz ramdisk.img

          # Clone mkbootimg tool and build it
          git clone https://github.com/osm0sis/mkbootimg.git
          cd mkbootimg
          make
          cd ..

          # Create boot.img
          ./mkbootimg/mkbootimg --kernel Image.gz --ramdisk ramdisk.img -o boot.img

      - name: Upload boot image
        uses: actions/upload-artifact@v3
        with:
          name: boot-image
          path: bootimage/boot.img
