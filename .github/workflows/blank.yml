name: CI

on:
  push:
    branches: [ "README" ]
  pull_request:
    branches: [ "README" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Print working directory
        run: pwd

      - name: Run a one-line script
        run: echo Hello, world!

      - name: Run a multi-line script
        run: |
          sudo apt update
          sudo dpkg --add-architecture i386
          sudo apt-get install git gcc-aarch64-linux-gnu gcc-aarch64-linux-gnu clang ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev python3-networkx libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip
          mkdir kernel_build
          cd kernel_build
          git clone --depth=1 -b moonstone-s-oss https://github.com/MiCode/Xiaomi_Kernel_OpenSource.git kernel
          sudo chmod 777 -R kernel
          cd kernel
          sudo mkdir out
          export ARCH=arm64
          export SUBARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          sudo make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- gki_defconfig O=out
          sudo make CC=clang ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j 64 O=out
          
          # Save the Image.gz and config
          sudo cp out/arch/arm64/boot/Image.gz ../Image.gz
          sudo cp out/.config ../config

      - name: Upload kernel image
        uses: actions/upload-artifact@v3
        with:
          name: kernel-image
          path: kernel_build/Image.gz

      - name: Upload config
        uses: actions/upload-artifact@v3
        with:
          name: kernel-config
          path: kernel_build/config
